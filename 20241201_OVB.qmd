---
format: pdf
editor: visual
---

**(2) (b)**

```{r set, include = FALSE}

library(tidyverse)
library(magrittr)
library(ggpubr)

```

This code simulates the given data-generating processes with 10,000 draws in 100 "samples" from the normal distribution of mean 0 and variance 1 for income and both error terms, filters out negative values for income and family size, then fits two linear models: one that omits family size and one that does not.

The resulting coefficients appear in the following plots (generated with hidden code).

```{r b}

set.seed(7)

n_population = 10000
n_samples = 100

dat = 
  tibble(group = rep(1:n_samples, each = n_population / n_samples),
         e = rnorm(n_population),
         u = rnorm(n_population),
         I = rnorm(n_population),
         F = 2 - 5 * I + u,
         E = 5 + 4 * I + 2 * F + e) %>% 
  filter(I > 0 & F > 0) %>% # Clean out nonsense values.
  group_by(group) %>% 
  nest %>% 
  mutate(cor_i_f = map(data, ~ cor(.x$I, .x$F)),
         model_omit = map(data, ~ lm(E ~ I, .x)),
         coefficients_omit = map(model_omit, coef),
         intercept_omit = map(coefficients_omit, extract2, 1),
         beta_i_omit = map(coefficients_omit, extract2, 2),
         model = map(data, ~ lm(E ~ I + F, .x)),
         coefficients = map(model, coef),
         intercept = map(coefficients, extract2, 1),
         beta_i = map(coefficients, extract2, 2),
         beta_f = map(coefficients, extract2, 3)) %>% 
  select(group, cor_i_f, starts_with("bet")) %>% 
  unnest(everything()) %>% 
  ungroup

```

```{r b_plot, echo = FALSE}

# Plot distributions of interest.

vis_cor = 
  dat %>% 
  ggplot() +
  geom_histogram(aes(x = cor_i_f),
                 color = NA,
                 fill = "grey75",
                 binwidth = 0.05) +
  scale_x_continuous(expand = c(0, 0)) +
  scale_y_continuous(expand = c(0, 0)) +
  labs(x = "Cor(I, F)", 
       y = "Simulations") +
  theme_pubr()

vis_mean_omit = dat %>% pivot_longer(everything()) %>% filter(name == "beta_i_omit") %>% summarize(value = value %>% mean) %>% magrittr::extract2(1)
vis_mean = dat %>% pivot_longer(everything()) %>% filter(name == "beta_i") %>% summarize(value = value %>% mean) %>% magrittr::extract2(1)

vis_bet = 
  dat %>% 
  select(starts_with("beta_i")) %>% 
  pivot_longer(everything()) %>% 
  ggplot() +
  geom_histogram(data = . %>% filter(name == "beta_i_omit"),
                 aes(x = value),
                 fill = "orange",
                 alpha = 0.33,
                 binwidth = 1) +
  geom_histogram(data = . %>% filter(name == "beta_i"),
                 aes(x = value),
                 fill = "blue",
                 alpha = 0.33,
                 binwidth = 1) +
  geom_vline(xintercept = vis_mean_omit,
             color = "orange") +
  geom_vline(xintercept = vis_mean,
             color = "blue") +
  scale_x_continuous(expand = c(0, 0)) +
  scale_y_continuous(expand = c(0, 0)) +
  labs(x = "Estimated Effect of I on E", 
       y = "Simulations") +
  theme_pubr()

vis_both = ggarrange(vis_cor, vis_bet, nrow = 1)

ggsave("output/vis_ovb_b.png",
       vis_both,
       dpi = 300,
       width = 8,
       height = 4)

```

![](output/vis_ovb_b.png){fig-alt="Simulation results." width="600"}

The plot at left shows a histogram of correlations of income and family size: the data-generating processes result in a strong negative correlation between income and family size, bearing out a condition for a negative coefficient estimate in the model with omission as in (a). The plot at right shows histograms and means of coefficient estimates for the model with omission (orange, centered around -2) and for the model without omission (blue, centered around 4); that is, the difference in means and distributions bears out the intuition in (a).

{{< pagebreak >}}

**(2) (d)**

This code adopts the same approach to the given data-generating processes, again with 10,000 draws in 100 "samples" from the normal distribution for both error terms and a noise term in Experience. Values for Age and Education are drawn from uniform distributions with appropriate bounds; Experience is then their difference less the noise term. As in (b), the code then applies linear models to the data. Unlike in (b), this results in two pairs of models, one with an effect of 0 of Experience on Female and one with an effect of -4. The estimated coefficients are then compared in histograms.

```{r c}

dat = 
  tibble(group = rep(1:n_samples, each = n_population / n_samples),
         age = runif(n_population, 65 - 16, 65),
         edu = runif(n_population, 10, 20),
         exp = age - edu - rnorm(n_population), 
         e = rnorm(n_population),
         u = rnorm(n_population),
         fem_0 = 2 + 0 * exp + u,
         fem_1 = 2 + (-4) * exp + u,
         inc_0 = 1 + 3 * exp + 6 * edu + 3 * age + (-6) * fem_0 + e,
         inc_1 = 1 + 3 * exp + 6 * edu + 3 * age + (-6) * fem_1 + e) %>% 
  group_by(group) %>% 
  nest %>% 
  mutate(cor_0 = map(data, ~ cor(.x$exp, .x$fem_0)),
         cor_1 = map(data, ~ cor(.x$exp, .x$fem_1)),
         mod_uncor_omit = map(data, ~ lm(inc_0 ~ exp + edu + age, .x)),
         coef_uncor_omit = map(mod_uncor_omit, coef),
         beta_uncor_omit = map(coef_uncor_omit, extract2, 2),
         mod_uncor = map(data, ~ lm(inc_0 ~ exp + edu + age + fem_0, .x)),
         coef_uncor = map(mod_uncor, coef),
         beta_uncor = map(coef_uncor, extract2, 2),
         mod_cor_omit = map(data, ~ lm(inc_1 ~ exp + edu + age, .x)),
         coef_cor_omit = map(mod_cor_omit, coef),
         beta_cor_omit = map(coef_cor_omit, extract2, 2),
         mod_cor = map(data, ~ lm(inc_1 ~ exp + edu + age + fem_1, .x)),
         coef_cor = map(mod_cor, coef),
         beta_cor = map(coef_cor, extract2, 2)) %>% 
  select(group, starts_with("cor"), starts_with("bet")) %>% 
  unnest(everything()) %>% 
  ungroup

```

```{r c_plot, echo = FALSE}

# Plot distributions of interest.

vis_mean_uncor_omit = 
  dat %>% 
  pivot_longer(everything()) %>% 
  filter(name == "beta_uncor_omit") %>% 
  summarize(value = value %>% mean) %>% 
  magrittr::extract2(1)

vis_mean_uncor = 
  dat %>% 
  pivot_longer(everything()) %>% 
  filter(name == "beta_uncor") %>% 
  summarize(value = value %>% mean) %>% 
  magrittr::extract2(1)

vis_mean_cor_omit = 
  dat %>% 
  pivot_longer(everything()) %>% 
  filter(name == "beta_cor_omit") %>% 
  summarize(value = value %>% mean) %>% 
  magrittr::extract2(1)

vis_mean_cor = 
  dat %>% 
  pivot_longer(everything()) %>% 
  filter(name == "beta_cor") %>% 
  summarize(value = value %>% mean) %>% 
  magrittr::extract2(1)

vis_uncor = 
  dat %>% 
  select(starts_with("beta_uncor")) %>% 
  pivot_longer(everything()) %>% 
  ggplot() +
  geom_histogram(data = . %>% filter(name == "beta_uncor_omit"),
                 aes(x = value),
                 fill = "orange",
                 alpha = 0.33,
                 binwidth = 0.10) +
  geom_histogram(data = . %>% filter(name == "beta_uncor"),
                 aes(x = value),
                 fill = "blue",
                 alpha = 0.33,
                 binwidth = 0.10) +
  geom_vline(xintercept = vis_mean_uncor_omit,
             color = "orange") +
  geom_vline(xintercept = vis_mean_uncor,
             color = "blue") +
  scale_x_continuous(expand = c(0, 0)) +
  scale_y_continuous(expand = c(0, 0)) +
  labs(x = "Estimated Effect of Exp. on Inc.", 
       y = "Simulations",
       title = "Cor(Exp., Fem.) = 0") +
  theme_pubr()

vis_cor = 
  dat %>% 
  select(starts_with("beta_cor")) %>% 
  pivot_longer(everything()) %>% 
  ggplot() +
  geom_histogram(data = . %>% filter(name == "beta_cor_omit"),
                 aes(x = value),
                 fill = "goldenrod1",
                 alpha = 0.33,
                 binwidth = 0.50) +
  geom_histogram(data = . %>% filter(name == "beta_cor"),
                 aes(x = value),
                 fill = "purple",
                 alpha = 0.33,
                 binwidth = 0.50) +
  geom_vline(xintercept = vis_mean_cor_omit,
             color = "goldenrod1") +
  geom_vline(xintercept = vis_mean_cor,
             color = "purple") +
  scale_x_continuous(expand = c(0, 0)) +
  scale_y_continuous(expand = c(0, 0)) +
  labs(x = "Estimated Effect of Exp. on Inc.", 
       y = "Simulations",
       title = "Cor(Exp., Fem.) = -1") +
  theme_pubr()

vis_both = ggarrange(vis_uncor, vis_cor, nrow = 1)

ggsave("output/vis_ovb_d.png",
       vis_both,
       dpi = 300,
       width = 8,
       height = 4)

```

![](output/vis_ovb_d.png){fig-alt="Simulation results." width="600"}

The plot at left shows histograms of coefficient estimates for the effect of Experience on Income with no correlation between Experience and Female, with estimates with omission in orange (the more dispersed distribution) and estimates without omission in blue. While the model with omission is far from efficient, the means of the two models are different only due to noise; that is, with no correlation between Experience and Female, omission does not bias the model.

The plot at right shows similar histograms with correlation between Experience and Female, with estimates with omission in yellow (centered around 27) and estimates without omission in purple (centered around 3). This bears out the result shown in (c): a negative correlation between Experience results in a positive bias in the model.
